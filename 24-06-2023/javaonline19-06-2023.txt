
		------------ Java Programming -----------

	Excecution Flow of C-CPP and Java Program:
	-------------------------------------------

	language Means?

	programming Language?

				CPU
			_________________________
			|			| ---> Command signals
			|	CU		|
			|_______________________|
	 Input		|			|        Output    
	   [ ]		|	ALU		|   |-->  [ ]
	    | 		|_______________________|   |
	    | 		|			|   |
	    |---------->|	IM		|---|
			|_______________________|
				^	|
			________|_______V_________
			|			|
			|	EM		|
			|_______________________|
 


		     BASIC 
		     COBOL						       |--> Sun Microsystem(Now Oracle) -> Java
	Assembly --> ForTran --> ALGOL60 --> CPL --> BCPL --> B --> C==>C++ ---|--> Microsoft Corpo.-> .Net
	(Up,UC)	     RPG						       |--> ....
		     SIMULA
		     ....


	C and C++ Programming					Java Programming

	Instructions		Program Name			Instructions 		Program Name
		|_________________|					|__________________|
			|							  |
			|							  |
	source code   *.c / *.cpp						*.java
			|							  |
			|							  |
		  c/cpp Compiler					    Java Compiler			Compilation
			|							(javac)
			|							  |
	backup file   *.bak						      *.class
			|						      (Byte Code)
			|							  |
	Linker -------->|					-----------------------------------
			|					|		|		|
			|				      Windows          MAC            Linux..
	Object code   *.obj					|		|		|
	file		|				       JVM	       JVM             JVM  		Interpretation
			|					|		|		|
	Executable    *.exe 				   Native code     Native code       Native code	
	file		|					|		|		|
		       Run				     Output	    Output	      Output
			|
		     Output


	Platform Dependent Code						Platform Independent Code

					platform = OS + Processor Artec.


 How To Write a java code? and Where?
 ------------------------------------

	- Editor - Notepad, Editplus, Notepad++ ....
	- IDE    - Netbeans, Eclipse, Intellijidea ....

	Bydefault Java does not provides any editor

How to Download and install Java?
----------------------------------

	- open https://www.oracle.com/in/java/technologies/downloads/#jdk20-windows
	- Install
	- run command on cmd (java -version) to check, it is installed on your PC or not.

Your First Program Using Notepad as an Editor:
-----------------------------------------------

	// Welcome Program

class WelcomeProgram
{
	public static void main(String []args)
	{
		System.out.print("Welcome to Java Programming");
	}
}

 - Compile and execute the java code

	- Open Notepad, Write a code
	- Open the Commant prompt and move to cadebase
	- compile the code using >> javac <prog_nm>.java
	- run the code using >> java <prog_nm>


//-------------------------------------------------------------------------------------------------------------------

- History: Java is devloped by James Gosling


- Applications devloped using java:

	- Standalone applications(Desktop Applications)
	- Web Applications
	- Enterprise Applications
	- Mobile Apps
	- Games
	- Electronic systems and interfacing
	

- Java Version History:

	- 1995 : first version (Alpha and beta)
	- 1996 : JDK 1.0
	- 1997 : JDK 1.1
	- 1998 : J2SE 1.2
	- 2000 : J2SE 1.3
	- 2002 : J2SE 1.4
	- 2004 : J2SE 5.0
	- 2006 : Java SE 6
	- 2011 : Java SE 7
	- 2014 : Java SE 8
	- 2017 : Java SE 9
	.....
	-  March 2023 Now Java SE 20
	-  sept 2023 Now Java SE 21

	
- Java Buzzwords ( Different Features of Java)

	- Simple
	- Platform Independent
	- Object Oriented programming language
	- Secure
	- Architecture netural
	- half compiled and half interpreted language.
	- Robust
	- having high performance
	- Dynamic
	- Multithreaded language
	- Distributed


- Using command line arguments in Java (This is one of the input method in java)

class DemoCmdLn
{
	public static void main(String []args)
	{
		System.out.print(" Demo Command Line Arguments");
	}
}

	- When we execute the code like

		>java DemoCmdLn  will will get output "Demo Command Line Arguments"
		
			in this case main collects NULL.

		But when we execute same code like

		>java DemoCmdLn hello all 20   The array of three strings passed as an argument
					       to main method. and which is collected in []args
					       but will get same output i.e.

						"Demo Command Line Arguments"

		How to access the arguments passed thw command line

	    args   0      1    2
		[hello] [all] [20]     


class DemoCmdLn
{
	public static void main(String []args)
	{
		System.out.print("\n Demo Command Line Arguments");
		System.out.println("\n First String:"+args[0]);
		System.out.println(" Second String:"+args[1]);
		System.out.print(" Third String:"+args[2]);
	}
}

	 // println() is like printf() in C prog. ends with newline character('\n')


//-------------------------------------------------------------------------------------------------------------------


	Character Set: In C --> ASCII Characters are used but Java uses the UNICODE system.

				In C prog. char data type needs only 1 byte. But Java character needs 2 bytes.
				As ASCII is subset of UNICODE, The value of ASCII codes is remains same but
				all are represented in 16 bit.

						in ASCII		      in UNICODE
				 suppose A --> 0010 1101		0000 0000 0010 1101


	Java Tokens: It contains constants, Keyword, identifiers, literals, Operators and Separators. collectively
		     known as Tokens, which acts as building block for java instruction.

			constants: Are the elemrnts having fix value
			Keyword: Reserved words whose meaning is known to compiler.  In java there are 50 keywords.
			identifiers: Name given to any programming element. (i.e. array name, class name, method name...)
			literals: Are the constant value represented in the program

					i.e
						4   -- integer literal
						3.5 -- fractional literal 
						'A' -- character literal
						"hello" -- string literal
						
			operators: are the symbols used to process the data.

			Separators: () [] {} . , ; :
						
			
	Instruction: Command issued to perform a specific task.

	Program: collection of instructions.


//------------------------------------------------------------------------------------------------------

	Data Types in Java: Data type is tool which is used to allocate the memory.

				
						Java
					      Data Types
						  |
				-----------------------------------------
				|					|
			Primitive data types			Non-Primitive data types
				|					|
	 ----------------------------------------		---------------------------------
	 |					|		|	|	|	|	
     Numeric				      boolean	     Array     string  class  interface..	
	|					
  ----------------------- 
  |			|
character 	     integral
 char			|
	------------------------
	|			|
    Integer 		  Fractional
	|			|
	|- byte			|- float
	|- short		|- double
	|- int
	|- long
	


 These data type are used in the type decl. instruction to know about the memory need.
 
	int x;		short a,b,c;	float f1=3.4f;		double d1=4.5,d2=632.67		char ch='D";	long v1=48l 
					or float f1=3.4F;							or long v1=48L


	// WAP to init different variables and display their values.

class DemoVarDecl
{
	public static void main(String []args)
	{
		int x=459;		
		short a=10;	
		long b=67L;
		float f1=3.4f;		
		double d1=4.5,d2=632.67;	
		char ch='D';

		System.out.println("value of x is: "+x);
		System.out.println("a="+a+"\t b="+b);
		System.out.println("f1 is "+f1+"\t d1 is "+d1+"\t d2 is "+d2);
		System.out.println("Character is: "+ch);					
	}
}

Output of above program:

value of x is: 459
a=10     b=67
f1 is 3.4        d1 is 4.5       d2 is 632.67
Character is: D



// Different ways of taking the data from outside world

	
	1. using the command line arguments

class InputCmdLn
{
	public static void main(String []args)
	{
		String s1="", s2="";
		
		s1=args[0];
		s2=args[1];

		System.out.println("S1 is: "+s1);
		System.out.println("S2 is: "+s2);
	}
}


	// Using command line arguments to input the numeric values


class InputCmdLn1
{
	public static void main(String []args)
	{
		int x;
		double y;
		
		x=Integer.parseInt(args[0]);			
		y=Double.parseDouble(args[1]);

		System.out.println("x is: "+x);
		System.out.println("y is: "+y);

		System.out.println("x is: "+(x+10));
		System.out.println("y is: "+(y+10));
	}
}



//--------------------------------------------------------------------------------------------------------------

	
	int x=10;		class Integer				Byte, Short, Long, Float, Double
				{					Character, String
	x				int xxx;
	[ 10 ]				.......
					static int parseInt(String ...)		class String
					{					{
					     ....					char ..[];
					     return <int_val>;				...
					}						<methods>
				}						}


				Integer.parseInt(args[0])



	folder containing all above classes named (lang), Technically it is known as package
	there are some other packages e.g. awt, io, swing.....

	all these packages are sub-folders of main folder named java

					java
					  |
			----------------------------------------
			|	|	|	|	|
		       lang    io      awt	swing  .....


import java.lang.String;	OR	import java.lang.*; [ Actually we are not importing lang package]
import java.lang.System;				    [ because it is imported bydefault          ]
class xxxx
{
	public static void main(String []args)
	{
		System.out. xxxxx
	}
}


 /// Another way of taking input - using keyboard

// WAP to input one integer and one double value using keyboard and just display both the values.

import java.io.BufferedReader;
import java.io.InputStreamReader;
class InputDemoKB
{	
	public static void main(String []args)
	{
		// allocate the memory to store the data
		int a=0;
		double b=0.0;	
		
		// create the input stream
		InputStreamReader isr=new InputStreamReader(System.in);
		BufferedReader br=new BufferedReader(isr);

		// input the data
		System.out.println("\n Enter the int value: ");
		try{ a=Integer.parseInt(br.readLine()); }catch(Exception e){}

		System.out.println("\n Enter the double value: ");
		try{ b=Double.parseDouble(br.readLine()); }catch(Exception e){}
		
		System.out.println("a="+a+"\t b="+b);

	}
}

//******


E:\JavaOnlineBatch-19-06-2023\JavaOnlineBatch-19-06-2023\24-06-2023>javac InputDemoKB.java
InputDemoKB.java:17: error: unreported exception IOException; must be caught or declared to be thrown
                a=Integer.parseInt(br.readLine());
                                              ^
InputDemoKB.java:20: error: unreported exception IOException; must be caught or declared to be thrown
                b=Double.parseDouble(br.readLine());
                                                ^
2 errors

E:\JavaOnlineBatch-19-06-2023\JavaOnlineBatch-19-06-2023\24-06-2023>javac InputDemoKB.java
InputDemoKB.java:17: error: cannot find symbol
                try{ a=Integer.parseInt(br.readLine()); }catch(Exeception e){}
                                                               ^
  symbol:   class Exeception
  location: class InputDemoKB
InputDemoKB.java:20: error: cannot find symbol
                try{ b=Double.parseDouble(br.readLine()); }catch(Exeception e){}
                                                                 ^
  symbol:   class Exeception
  location: class InputDemoKB
2 errors

E:\JavaOnlineBatch-19-06-2023\JavaOnlineBatch-19-06-2023\24-06-2023>javac InputDemoKB.java
InputDemoKB.java:22: error: variable a might not have been initialized
                System.out.println("a="+a+"\t b="+b);
                                        ^
InputDemoKB.java:22: error: variable b might not have been initialized
                System.out.println("a="+a+"\t b="+b);
                                                  ^
2 errors

E:\JavaOnlineBatch-19-06-2023\JavaOnlineBatch-19-06-2023\24-06-2023>javac InputDemoKB.java

E:\JavaOnlineBatch-19-06-2023\JavaOnlineBatch-19-06-2023\24-06-2023>java InputDemoKB

 Enter the int value:
12

 Enter the double value:
5.643
a=12     b=5.643

E:\JavaOnlineBatch-19-06-2023\JavaOnlineBatch-19-06-2023\24-06-2023>



*/


	












